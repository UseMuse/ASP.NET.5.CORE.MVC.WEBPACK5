@{
    ViewData["Title"] = "Daterangepicker";
}

@section Scripts
{
    @*<script src="~/lib/daterangepicker/moment.min.js"></script>
        <link href="~/lib/daterangepicker/daterangepicker.css" rel="stylesheet" />
        <script src="~/lib/daterangepicker/daterangepicker.js"></script>*@
    <link href="~/dist/css/Home.Daterangepicker.css" rel="stylesheet" />
    <script src="~/dist/Home.Daterangepicker.js"></script>
    <script>
        function ready() {

            var datetimepiker = $(":input[type='datetimepiker']");

            if (datetimepiker.length > 0) {
                // datetimepiker.inputmask({ alias: "datetime", inputFormat: "dd.mm.yyyy HH:MM:ss", placeholder: "дд.мм.гггг --:--:--", });
                datetimepiker.inputmask("datetime", { "clearIncomplete": true });

                datetimepiker.daterangepicker({
                    "singleDatePicker": true,
                    "timePicker": true,
                    "timePicker24Hour": true,
                    "timePickerSeconds": true,
                    'linkedCalendars': true,
                    "alwaysShowCalendars": true,
                    "autoApply": true,
                    'autoUpdateInput': false,// проставлять текущую дату по умолчанию
                    "locale": {
                        "format": "DD.MM.YYYY HH:mm:ss",
                        cancelLabel: 'Очистить',
                        applyLabel: 'Принять'
                    },
                    isCustomDate: function (date) {
                        var iscurrentDate = moment(date, 'DD.MM.YYYY HH:mm:ss').isSame(new Date(), "day");
                        if (iscurrentDate) {
                            return 'backgroundForToday';
                        }
                    }
                }
                    , function (start, end, label) {
                        console.log('New date range selected: ' + start.format('DD.MM.YYYY HH:mm:ss') + ' to ' + end.format('DD.MM.YYYY HH:mm:ss') + ' (predefined range: ' + label + ')');
                    }
                ).on("apply.daterangepicker", function (e, picker) {
                    picker.element.val(picker.startDate.format('DD.MM.YYYY HH:mm:ss'));
                    datetimepiker.trigger("change");
                }).on('cancel.daterangepicker', function (ev, picker) {
                    $(this).val('');
                    datetimepiker.trigger("change");
                });


                //datetimepiker.inputmask({
                //    mask: "99.99.9999 99:99:99", placeholder: "_"});
                //$("#time_apertura").inputmask({"alias":"Regex","regex":"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"});


                //datetimepiker.keydown(function (event) {
                //    var val = $(this).val();
                //    console.log(val);
                //    if (val === undefined) {
                //        alert('undefined');
                //    }
                //    if (val === 'мм.дд.гггг --:--:--') {
                //        alert('мм.дд.гггг 00:00:00');
                //    }
                //    if (val === '') {

                //    }
                //    //event.preventDefault();
                //});

                datetimepiker.bind('paste cut', function (e) {
                    var value = e.type == 'paste'
                        ? e.originalEvent.clipboardData.getData('text')
                        : window.getSelection().toString();
                    console.log(e.type + ': ' + value);
                });

            }
        }
        document.addEventListener("DOMContentLoaded", ready);
    </script>
}
<h2>@ViewData["Title"]</h2>
<h3>@ViewData["Message"]</h3>
<input class="form-control" type="datetimepiker" id="LastSyncDate" name="LastSyncDate" value="17.05.2021 16:46:20" im-insert="false">
